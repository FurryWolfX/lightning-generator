const Lightning = require("@wolfx/lightning");

class <%=TableName%> extends LightningCore {
  async findById(id) {
    const result = await database.find("<%=table_name%>", ["*"], id);
    if (result.length > 0) {
        return result[0];
    } else {
        return {};
    }
  }
  async queryByParams(params) {
    if (params.pageSize) {
      params.limitStart = (params.pageIndex - 1) * params.pageSize;
      params.limitSize = +params.pageSize;
    }
    const list = await database.query("<%=table_name%>.queryByParams", params);
    if (params.pageSize) {
      const count = await database.query("<%=table_name%>.countByParams", params);
      return {
        list,
        count: count[0].count,
        pageIndex: params.pageIndex,
        pageSize: params.pageSize
      };
    } else {
      return list;
    }
  }
  async updateOrInsert(data) {
    if (data.id) {
      return await database.update("<%=table_name%>", data, "id");
    } else {
      return await database.insert("<%=table_name%>", data);
    }
  }
  async deleteById(id) {
    return await database.del("<%=table_name%>", id);
  }
}

module.exports = new <%=TableName%>();
